Parte 8
                    // Processar os dados
                    const cols = data.table.cols.map(col => col.label);
                    const rows = data.table.rows.map(row => {
                        const obj = {};
                        row.c.forEach((cell, i) => {
                            obj[cols[i].toLowerCase()] = cell ? (cell.v || '') : '';
                        });
                        return obj;
                    });
                    
                    products = rows;
                    
                    // Carregar categorias
                    loadCategories();
                    
                    // Exibir produtos na visualização atual
                    switchView(currentView);
                    
                    loadingElement.classList.add('hidden');
                })
                .catch(error => {
                    console.error('Erro ao carregar dados:', error);
                    
                    // Tentar método de backup
                    console.log('Tentando método de backup...');
                    fetch(backupApiUrl)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Erro ao carregar dados (backup)');
                            }
                            return response.text();
                        })
                        .then(csv => {
                            // Processar CSV
                            const lines = csv.split('\n');
                            const headers = lines[0].split(',').map(header => header.trim().toLowerCase());
                            
                            products = lines.slice(1).map(line => {
                                const values = line.split(',');
                                const product = {};
                                headers.forEach((header, i) => {
                                    product[header] = values[i] ? values[i].trim() : '';
                                });
                                return product;
                            });
                            
                            // Carregar categorias
                            loadCategories();
                            
                            // Exibir produtos na visualização atual
                            switchView(currentView);
                            
                            loadingElement.classList.add('hidden');
                        })
                        .catch(backupError => {
                            console.error('Erro no método de backup:', backupError);
                            loadingElement.classList.add('hidden');
                            errorElement.classList.remove('hidden');
                        });
                });
        }

        // Função para carregar categorias únicas
        function loadCategories() {
            const categories = [...new Set(products.map(product => product.categoria || '').filter(Boolean))];
            
            categorySelect.innerHTML = '<option value="">Todas as categorias</option>';
            categories.forEach(category => {
                const option = document.createElement('option');
                option.value = category;
                option.textContent = category;
                categorySelect.appendChild(option);
            });
        }

        // Função para exibir produtos
        function displayProducts(productsToDisplay) {
            if (currentView === 'gallery') {
                displayProductsAsGallery(productsToDisplay);
            } else {
                displayProductsAsTable(productsToDisplay);
            }
        }

        // Função para exibir produtos em formato de galeria
        function displayProductsAsGallery(productsToDisplay) {
            productGallery.innerHTML = '';
            
