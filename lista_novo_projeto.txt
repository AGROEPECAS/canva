

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Lista de Preços - SULPARA MASSEY FERGUSON</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"></script>
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f0f2f5;
        }
        .product-card {
            transition: all 0.3s ease;
            height: 100%;
        }
        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.1);
        }
        .loader {
            border: 5px solid #f3f3f3;
            border-top: 5px solid #e53e3e;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 1s linear infinite;
            margin: 20px auto;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        .card-container {
            position: relative;
            width: 340px;
            height: 480px;
            background-color: white;
            border-radius: 12px;
            overflow: hidden;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        .card-header {
            background-color: #e53e3e;
            color: white;
            padding: 15px;
            text-align: center;
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        .card-content {
            padding: 20px;
        }
        .card-footer {
            position: absolute;
            bottom: 0;
            width: 100%;
            background-color: #f8f8f8;
            padding: 15px;
            text-align: center;
        }
        .product-image {
            width: 100%;
            height: 180px;
            object-fit: contain;
            margin-bottom: 15px;
        }
        .gallery-image {
            width: 100%;
            height: 160px;
            object-fit: contain;
        }
        .logo-image {
            height: 40px;
            margin-bottom: 5px;
        }
        .vendor-selector {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
        }
        .vendor-selector-content {
            background-color: white;
            padding: 30px;
            border-radius: 12px;
            width: 90%;
            max-width: 500px;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
        }
        .vendor-card {
            cursor: pointer;
            transition: all 0.2s ease;
        }
        .vendor-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }
        .vendor-card.selected {
            border-color: #e53e3e;
            background-color: #fff5f5;
        }
        .whatsapp-button {
            background-color: #25D366;
        }
        .whatsapp-button:hover {
            background-color: #128C7E;
        }
        .product-price {
            color: #e53e3e;
            font-weight: 600;
        }
    </style>
</head>
<body class="min-h-screen">
    <!-- Seletor de Vendedor -->
    <div id="vendorSelector" class="vendor-selector">
        <div class="vendor-selector-content">
            <div class="flex justify-between items-center mb-6">
                <h2 class="text-2xl font-bold text-gray-800">Selecione o Vendedor</h2>
                <img src="https://raw.githubusercontent.com/AGROEPECAS/canva/main/versao27_logo_massey-ferguson-512.png" alt="Massey Ferguson Logo" class="h-12">
            </div>
            
            <div class="grid grid-cols-1 gap-4 mb-6" id="vendorList">
                <!-- Vendedores serão carregados aqui -->
            </div>
            
            <div class="flex justify-end">
                <button id="confirmVendor" class="bg-red-600 hover:bg-red-700 text-white px-6 py-2 rounded-md transition duration-300 disabled:opacity-50 disabled:cursor-not-allowed" disabled>
                    Confirmar
                </button>
            </div>
        </div>
    </div>

    <header class="bg-red-600 text-white py-4 shadow-md">
        <div class="container mx-auto px-4 flex justify-between items-center">
            <div class="flex items-center">
                <img src="https://raw.githubusercontent.com/AGROEPECAS/canva/main/versao27_logo_massey-ferguson-512.png" alt="Massey Ferguson Logo" class="h-10 mr-3">
                <h1 class="text-2xl font-bold">SULPARA MASSEY FERGUSON</h1>
            </div>
            <div class="text-sm">
                <p>PARAGOMINAS/PA</p>
            </div>
        </div>
    </header>

    <main class="container mx-auto px-4 py-8">
        <div class="bg-white rounded-lg shadow-md p-6 mb-8">
            <div class="flex justify-between items-center mb-6">
                <h2 class="text-xl font-semibold">Lista de Preços Interativa</h2>
                <div class="flex items-center">
                    <span class="text-sm text-gray-600 mr-2">Vendedor:</span>
                    <button id="changeVendor" class="flex items-center text-red-600 hover:text-red-800 font-medium">
                        <span id="selectedVendorName">Selecionar</span>
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                        </svg>
                    </button>
                </div>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
                <div>
                    <label for="search" class="block text-sm font-medium text-gray-700 mb-1">Buscar produto:</label>
                    <input type="text" id="search" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500" placeholder="Digite PN, nome ou descrição...">
                </div>
                <div>
                    <label for="category" class="block text-sm font-medium text-gray-700 mb-1">Categoria:</label>
                    <select id="category" class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500">
                        <option value="">Todas as categorias</option>
                        <!-- Categorias serão carregadas dinamicamente -->
                    </select>
                </div>
            </div>

            <div class="flex justify-between items-center mb-6">
                <button id="loadData" class="bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-md transition duration-300 flex items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                    </svg>
                    Carregar Produtos
                </button>
                <div class="flex space-x-2">
                    <button id="viewGallery" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md transition duration-300 flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
                        </svg>
                        Galeria
                    </button>
                    <button id="viewTable" class="bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-md transition duration-300 flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
                        </svg>
                        Tabela
                    </button>
                </div>
            </div>

            <div id="loading" class="hidden">
                <div class="loader"></div>
                <p class="text-center text-gray-600">Carregando produtos...</p>
            </div>

            <div id="error" class="hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4">
                <p>Erro ao carregar os dados. Por favor, tente novamente.</p>
            </div>

            <!-- Visualização em Tabela -->
            <div class="overflow-x-auto">
                <table id="productTable" class="min-w-full bg-white border border-gray-200 hidden">
                    <thead>
                        <tr class="bg-gray-100">
                            <th class="py-2 px-4 border-b text-left">PN</th>
                            <th class="py-2 px-4 border-b text-left">Descrição</th>
                            <th class="py-2 px-4 border-b text-right">Preço</th>
                            <th class="py-2 px-4 border-b text-center">Ações</th>
                        </tr>
                    </thead>
                    <tbody id="productList">
                        <!-- Produtos serão carregados dinamicamente -->
                    </tbody>
                </table>
            </div>

            <!-- Visualização em Galeria -->
            <div id="productGallery" class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 hidden">
                <!-- Produtos serão carregados dinamicamente como cards -->
            </div>
        </div>

        <div id="cardPreviewSection" class="hidden bg-white rounded-lg shadow-md p-6">
            <h2 class="text-xl font-semibold mb-4">Visualização do Card</h2>
            <div class="flex flex-col md:flex-row justify-center items-start gap-8">
                <div id="cardPreview" class="card-container">
                    <div class="card-header">
                        <img src="https://raw.githubusercontent.com/AGROEPECAS/canva/main/versao27_logo_massey-ferguson-512.png" alt="Massey Ferguson Logo" class="logo-image">
                        <h3 class="text-lg font-bold">SULPARA MASSEY FERGUSON</h3>
                    </div>
                    <div class="card-content">
                        <div class="flex justify-center">
                            <img id="productImage" class="product-image" src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='200' height='200' viewBox='0 0 200 200'%3E%3Crect width='200' height='200' fill='%23f0f0f0'/%3E%3Cpath d='M82 88H118V112H82z' fill='%23e53e3e'/%3E%3Cpath d='M76.5 76.5H123.5V123.5H76.5z' stroke='%23e53e3e' stroke-width='3' fill='none'/%3E%3Ctext x='100' y='140' font-family='Arial' font-size='14' text-anchor='middle' fill='%23333333'%3EMassey Ferguson%3C/text%3E%3C/svg%3E" alt="Produto">
                        </div>
                        <h4 id="productTitle" class="text-lg font-semibold text-center mb-2">Nome do Produto</h4>
                        <p id="productDescription" class="text-sm text-gray-600 mb-4 text-center">Descrição do produto</p>
                        <p id="productCode" class="text-xs text-gray-500 mb-2 text-center">PN: XXXXX</p>
                        <div class="flex justify-center">
                            <span id="productPrice" class="text-2xl font-bold text-red-600">R$ 0,00</span>
                        </div>
                    </div>
                    <div class="card-footer">
                        <p class="text-sm font-medium" id="vendorName">Nome do Vendedor</p>
                        <p class="text-xs text-gray-500 mt-1" id="vendorContact">Contato do Vendedor</p>
                    </div>
                </div>
                
                <div class="mt-6 md:mt-0 w-full md:w-auto">
                    <div class="bg-gray-50 p-4 rounded-lg mb-4">
                        <h3 class="font-medium text-gray-800 mb-2">Compartilhar via:</h3>
                        <div class="flex flex-col space-y-2">
                            <button id="downloadCard" class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md transition duration-300 flex items-center justify-center">
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                                </svg>
                                Baixar Card
                            </button>
                            <button id="shareWhatsapp" class="whatsapp-button hover:bg-green-700 text-white px-4 py-2 rounded-md transition duration-300 flex items-center justify-center">
                                <svg class="h-5 w-5 mr-2" fill="currentColor" viewBox="0 0 24 24">
                                    <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347z"/>
                                    <path d="M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm0 22c-5.523 0-10-4.477-10-10S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10z"/>
                                </svg>
                                WhatsApp
                            </button>
                            <button id="shareEmail" class="bg-gray-600 hover:bg-gray-700 text-white px-4 py-2 rounded-md transition duration-300 flex items-center justify-center">
                                <svg class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                                </svg>
                                E-mail
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <footer class="bg-gray-800 text-white py-4 mt-8">
        <div class="container mx-auto px-4 text-center">
            <p>&copy; 2023 SULPARA MASSEY FERGUSON - Todos os direitos reservados</p>
        </div>
    </footer>

    <script>
        // Configuração da planilha Google Sheets usando o método alternativo
        const spreadsheetUrl = 'https://docs.google.com/spreadsheets/d/1XRRZYgWgzG26PO9XLTa5t_2Oth_Jl4qnmoQUmFn-Vdc/edit?usp=sharing';
        
        // Extração do ID da planilha
        function extractSpreadsheetId(url) {
            const regex = /[-\w]{25,}/;
            const match = url.match(regex);
            return match ? match[0] : null;
        }
        
        const spreadsheetId = extractSpreadsheetId(spreadsheetUrl);
        const sheetName = 'produtos'; // Nome da aba
        
        // URLs alternativas para acesso à API
        const apiUrl = `https://docs.google.com/spreadsheets/d/${spreadsheetId}/gviz/tq?tqx=out:json&sheet=${sheetName}`;
        const backupApiUrl = `https://docs.google.com/spreadsheets/d/${spreadsheetId}/gviz/tq?tqx=out:csv&sheet=${sheetName}`;

        // Dados dos vendedores
        const vendors = [
            { nome: 'Bruno', whatsapp: '91-99199-1529', email: 'bruno.desousa@revemar.com.br' },
            { nome: 'Francisco', whatsapp: '91-99162-9648', email: 'francisco.jesus@revemar.com.br' },
            { nome: 'Ricardo', whatsapp: '91-99206-0878', email: 'ricardo.barros@revemar.com.br' },
            { nome: 'Branco', whatsapp: '91-99162-9654', email: 'joao.branco@revemar.com.br' },
            { nome: 'Rodney', whatsapp: '94-99183-6865', email: 'rodney.brito@revemar.com.br' }
        ];

        // Elementos DOM
        const vendorSelector = document.getElementById('vendorSelector');
        const vendorList = document.getElementById('vendorList');
        const confirmVendorBtn = document.getElementById('confirmVendor');
        const selectedVendorName = document.getElementById('selectedVendorName');
        const changeVendorBtn = document.getElementById('changeVendor');
        const loadDataBtn = document.getElementById('loadData');
        const viewGalleryBtn = document.getElementById('viewGallery');
        const viewTableBtn = document.getElementById('viewTable');
        const searchInput = document.getElementById('search');
        const categorySelect = document.getElementById('category');
        const productTable = document.getElementById('productTable');
        const productList = document.getElementById('productList');
        const productGallery = document.getElementById('productGallery');
        const loadingElement = document.getElementById('loading');
        const errorElement = document.getElementById('error');
        const cardPreviewSection = document.getElementById('cardPreviewSection');
        const downloadCardBtn = document.getElementById('downloadCard');
        const shareWhatsappBtn = document.getElementById('shareWhatsapp');
        const shareEmailBtn = document.getElementById('shareEmail');

        // Elementos do card
        const productTitle = document.getElementById('productTitle');
        const productDescription = document.getElementById('productDescription');
        const productCode = document.getElementById('productCode');
        const productPrice = document.getElementById('productPrice');
        const productImage = document.getElementById('productImage');
        const vendorNameElement = document.getElementById('vendorName');
        const vendorContactElement = document.getElementById('vendorContact');

        // Armazenar dados dos produtos
        let products = [];
        let selectedProduct = null;
        let selectedVendor = null;
        let currentView = 'gallery'; // 'gallery' ou 'table'

        // Inicializar seletor de vendedor
        initVendorSelector();

        // Carregar dados da planilha
        loadDataBtn.addEventListener('click', loadProducts);

        // Alternar entre visualizações
        viewGalleryBtn.addEventListener('click', () => switchView('gallery'));
        viewTableBtn.addEventListener('click', () => switchView('table'));

        // Pesquisar produtos
        searchInput.addEventListener('input', filterProducts);
        categorySelect.addEventListener('change', filterProducts);

        // Baixar e compartilhar card
        downloadCardBtn.addEventListener('click', downloadCard);
        shareWhatsappBtn.addEventListener('click', shareViaWhatsapp);
        shareEmailBtn.addEventListener('click', shareViaEmail);
        
        // Mudar vendedor
        changeVendorBtn.addEventListener('click', showVendorSelector);

        // Função para inicializar o seletor de vendedor
        function initVendorSelector() {
            vendorList.innerHTML = '';
            
            vendors.forEach(vendor => {
                const vendorCard = document.createElement('div');
                vendorCard.className = 'vendor-card border border-gray-200 rounded-lg p-4 hover:shadow-md';
                vendorCard.innerHTML = `
                    <div class="flex items-center">
                        <div class="bg-red-100 rounded-full p-3 mr-4">
                            <svg class="h-6 w-6 text-red-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                            </svg>
                        </div>
                        <div>
                            <h3 class="font-medium text-gray-800">${vendor.nome}</h3>
                            <p class="text-sm text-gray-500">${vendor.whatsapp}</p>
                        </div>
                    </div>
                `;
                
                vendorCard.addEventListener('click', () => {
                    // Remover seleção anterior
                    document.querySelectorAll('.vendor-card').forEach(card => {
                        card.classList.remove('selected');
                    });
                    
                    // Selecionar este vendedor
                    vendorCard.classList.add('selected');
                    selectedVendor = vendor;
                    confirmVendorBtn.disabled = false;
                });
                
                vendorList.appendChild(vendorCard);
            });
            
            confirmVendorBtn.addEventListener('click', () => {
                if (selectedVendor) {
                    selectedVendorName.textContent = selectedVendor.nome;
                    vendorSelector.style.display = 'none';
                }
            });
        }

        // Função para mostrar o seletor de vendedor
        function showVendorSelector() {
            vendorSelector.style.display = 'flex';
        }

        // Função para alternar entre visualizações
        function switchView(view) {
            currentView = view;
            
            if (view === 'gallery') {
                productGallery.classList.remove('hidden');
                productTable.classList.add('hidden');
                viewGalleryBtn.classList.remove('bg-blue-600');
                viewGalleryBtn.classList.add('bg-blue-700');
                viewTableBtn.classList.remove('bg-gray-700');
                viewTableBtn.classList.add('bg-gray-600');
            } else {
                productGallery.classList.add('hidden');
                productTable.classList.remove('hidden');
                viewGalleryBtn.classList.add('bg-blue-600');
                viewGalleryBtn.classList.remove('bg-blue-700');
                viewTableBtn.classList.add('bg-gray-700');
                viewTableBtn.classList.remove('bg-gray-600');
            }
            
            // Se já temos produtos carregados, exibir na visualização selecionada
            if (products.length > 0) {
                displayProducts(products);
            }
        }

        // Função para carregar produtos da planilha usando o método alternativo
        function loadProducts() {
            if (!selectedVendor) {
                alert('Por favor, selecione um vendedor antes de carregar os produtos.');
                showVendorSelector();
                return;
            }
            
            loadingElement.classList.remove('hidden');
            productTable.classList.add('hidden');
            productGallery.classList.add('hidden');
            errorElement.classList.add('hidden');
            
            fetch(apiUrl)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Erro ao carregar dados');
                    }
                    return response.text();
                })
                .then(text => {
                    // Extrair o JSON da resposta
                    const jsonText = text.substring(text.indexOf('{'), text.lastIndexOf('}') + 1);
                    const data = JSON.parse(jsonText);
                    
                    // Processar os dados
                    const cols = data.table.cols.map(col => col.label);
                    const rows = data.table.rows.map(row => {
                        const obj = {};
                        row.c.forEach((cell, i) => {
                            obj[cols[i].toLowerCase()] = cell ? (cell.v || '') : '';
                        });
                        return obj;
                    });
                    
                    products = rows;
                    
                    // Carregar categorias
                    loadCategories();
                    
                    // Exibir produtos na visualização atual
                    switchView(currentView);
                    
                    loadingElement.classList.add('hidden');
                })
                .catch(error => {
                    console.error('Erro ao carregar dados:', error);
                    
                    // Tentar método de backup
                    console.log('Tentando método de backup...');
                    fetch(backupApiUrl)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Erro ao carregar dados (backup)');
                            }
                            return response.text();
                        })
                        .then(csv => {
                            // Processar CSV
                            const lines = csv.split('\n');
                            const headers = lines[0].split(',').map(header => header.trim().toLowerCase());
                            
                            products = lines.slice(1).map(line => {
                                const values = line.split(',');
                                const product = {};
                                headers.forEach((header, i) => {
                                    product[header] = values[i] ? values[i].trim() : '';
                                });
                                return product;
                            });
                            
                            // Carregar categorias
                            loadCategories();
                            
                            // Exibir produtos na visualização atual
                            switchView(currentView);
                            
                            loadingElement.classList.add('hidden');
                        })
                        .catch(backupError => {
                            console.error('Erro no método de backup:', backupError);
                            loadingElement.classList.add('hidden');
                            errorElement.classList.remove('hidden');
                        });
                });
        }

        // Função para carregar categorias únicas
        function loadCategories() {
            const categories = [...new Set(products.map(product => product.categoria || '').filter(Boolean))];
            
            categorySelect.innerHTML = '<option value="">Todas as categorias</option>';
            categories.forEach(category => {
                const option = document.createElement('option');
                option.value = category;
                option.textContent = category;
                categorySelect.appendChild(option);
            });
        }

        // Função para exibir produtos
        function displayProducts(productsToDisplay) {
            if (currentView === 'gallery') {
                displayProductsAsGallery(productsToDisplay);
            } else {
                displayProductsAsTable(productsToDisplay);
            }
        }

        // Função para exibir produtos em formato de galeria
        function displayProductsAsGallery(productsToDisplay) {
            productGallery.innerHTML = '';
            
            if (productsToDisplay.length === 0) {
                const emptyMessage = document.createElement('div');
                emptyMessage.className = 'col-span-full text-center py-8 text-gray-500';
                emptyMessage.textContent = 'Nenhum produto encontrado';
                productGallery.appendChild(emptyMessage);
                return;
            }
            
            productsToDisplay.forEach(product => {
                const card = document.createElement('div');
                card.className = 'product-card bg-white rounded-lg shadow-md overflow-hidden flex flex-col';
                
                const preco = parseFloat(product.preco || 0).toLocaleString('pt-BR', {
                    style: 'currency',
                    currency: 'BRL'
                });
                
                // Imagem padrão se não houver foto
                let imageUrl = "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='200' height='200' viewBox='0 0 200 200'%3E%3Crect width='200' height='200' fill='%23f0f0f0'/%3E%3Cpath d='M82 88H118V112H82z' fill='%23e53e3e'/%3E%3Cpath d='M76.5 76.5H123.5V123.5H76.5z' stroke='%23e53e3e' stroke-width='3' fill='none'/%3E%3Ctext x='100' y='140' font-family='Arial' font-size='14' text-anchor='middle' fill='%23333333'%3EMassey Ferguson%3C/text%3E%3C/svg%3E";
                
                // Se houver foto, usar a URL da foto
                if (product.foto && product.foto.trim() !== '') {
                    imageUrl = product.foto;
                }
                
                card.innerHTML = `
                    <div class="p-4 flex-grow">
                        <div class="flex justify-center mb-3">
                            <img src="${imageUrl}" alt="${product.descricao || 'Produto'}" class="gallery-image">
                        </div>
                        <h3 class="font-medium text-gray-800 mb-1 truncate">${product.descricao || 'Produto'}</h3>
                        <p class="text-xs text-gray-500 mb-2">PN: ${product.pn || ''}</p>
                        <p class="product-price text-lg">${preco}</p>
                    </div>
                    <div class="p-3 bg-gray-50 border-t border-gray-100">
                        <button class="select-btn w-full bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded-md text-sm transition duration-300">
                            Gerar Card
                        </button>
                    </div>
                `;
                
                const selectBtn = card.querySelector('.select-btn');
                selectBtn.addEventListener('click', () => {
                    selectProduct(product);
                    showCardPreview();
                });
                
                productGallery.appendChild(card);
            });
        }

        // Função para exibir produtos em formato de tabela
        function displayProductsAsTable(productsToDisplay) {
            productList.innerHTML = '';
            
            if (productsToDisplay.length === 0) {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td colspan="4" class="py-4 px-4 text-center text-gray-500">
                        Nenhum produto encontrado
                    </td>
                `;
                productList.appendChild(row);
                return;
            }
            
            productsToDisplay.forEach(product => {
                const row = document.createElement('tr');
                row.className = 'hover:bg-gray-50';
                
                const preco = parseFloat(product.preco || 0).toLocaleString('pt-BR', {
                    style: 'currency',
                    currency: 'BRL'
                });
                
                row.innerHTML = `
                    <td class="py-2 px-4 border-b">${product.pn || ''}</td>
                    <td class="py-2 px-4 border-b">${product.descricao || ''}</td>
                    <td class="py-2 px-4 border-b text-right">${preco}</td>
                    <td class="py-2 px-4 border-b text-center">
                        <button class="select-btn bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded-md text-sm transition duration-300">
                            Gerar Card
                        </button>
                    </td>
                `;
                
                const selectBtn = row.querySelector('.select-btn');
                selectBtn.addEventListener('click', () => {
                    selectProduct(product);
                    showCardPreview();
                });
                
                productList.appendChild(row);
            });
        }

        // Função para filtrar produtos
        function filterProducts() {
            const searchTerm = searchInput.value.toLowerCase();
            const selectedCategory = categorySelect.value;
            
            const filteredProducts = products.filter(product => {
                const matchesSearch = 
                    (product.pn || '').toString().toLowerCase().includes(searchTerm) ||
                    (product.descricao || '').toString().toLowerCase().includes(searchTerm);
                
                const matchesCategory = !selectedCategory || product.categoria === selectedCategory;
                
                return matchesSearch && matchesCategory;
            });
            
            displayProducts(filteredProducts);
        }

        // Função para selecionar um produto
        function selectProduct(product) {
            selectedProduct = product;
        }

        // Função para mostrar a visualização do card
        function showCardPreview() {
            if (!selectedProduct || !selectedVendor) return;
            
            productTitle.textContent = selectedProduct.produto || selectedProduct.descricao || 'Produto';
            productDescription.textContent = selectedProduct.descricao || 'Descrição não disponível';
            productCode.textContent = `PN: ${selectedProduct.pn || ''}`;
            
            const preco = parseFloat(selectedProduct.preco || 0).toLocaleString('pt-BR', {
                style: 'currency',
                currency: 'BRL'
            });
            productPrice.textContent = preco;
            
            // Configurar informações do vendedor
            vendorNameElement.textContent = selectedVendor.nome;
            vendorContactElement.textContent = selectedVendor.whatsapp;
            
            // Configurar imagem do produto (se disponível)
            if (selectedProduct.foto && selectedProduct.foto.trim() !== '') {
                productImage.src = selectedProduct.foto;
            } else {
                // Imagem padrão se não houver foto
                productImage.src = "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='200' height='200' viewBox='0 0 200 200'%3E%3Crect width='200' height='200' fill='%23f0f0f0'/%3E%3Cpath d='M82 88H118V112H82z' fill='%23e53e3e'/%3E%3Cpath d='M76.5 76.5H123.5V123.5H76.5z' stroke='%23e53e3e' stroke-width='3' fill='none'/%3E%3Ctext x='100' y='140' font-family='Arial' font-size='14' text-anchor='middle' fill='%23333333'%3EMassey Ferguson%3C/text%3E%3C/svg%3E";
            }
            
            cardPreviewSection.classList.remove('hidden');
            cardPreviewSection.scrollIntoView({ behavior: 'smooth' });
        }

        // Função para baixar o card como imagem
        function downloadCard() {
            if (!selectedProduct || !selectedVendor) return;
            
            const cardElement = document.getElementById('cardPreview');
            
            html2canvas(cardElement, {
                scale: 2,
                backgroundColor: null,
                logging: false
            }).then(canvas => {
                const image = canvas.toDataURL('image/png');
                const link = document.createElement('a');
                link.href = image;
                link.download = `SULPARA-${selectedProduct.pn || 'produto'}.png`;
                link.click();
            });
        }
        
        // Função para compartilhar via WhatsApp
        function shareViaWhatsapp() {
            if (!selectedProduct || !selectedVendor) return;
            
            const productName = selectedProduct.produto || selectedProduct.descricao || 'Produto';
            const price = parseFloat(selectedProduct.preco || 0).toLocaleString('pt-BR', {
                style: 'currency',
                currency: 'BRL'
            });
            
            const message = `*SULPARA MASSEY FERGUSON*\n\n*${productName}*\nPN: ${selectedProduct.pn || ''}\n${selectedProduct.descricao || ''}\n\n*Preço: ${price}*\n\nConsulte condições de pagamento.\n\n${selectedVendor.nome}\n${selectedVendor.whatsapp}`;
            
            const encodedMessage = encodeURIComponent(message);
            window.open(`https://wa.me/?text=${encodedMessage}`, '_blank');
        }
        
        // Função para compartilhar via E-mail
        function shareViaEmail() {
            if (!selectedProduct || !selectedVendor) return;
            
            const productName = selectedProduct.produto || selectedProduct.descricao || 'Produto';
            const price = parseFloat(selectedProduct.preco || 0).toLocaleString('pt-BR', {
                style: 'currency',
                currency: 'BRL'
            });
            
            const subject = `SULPARA MASSEY FERGUSON - ${productName}`;
            const body = `SULPARA MASSEY FERGUSON\n\n${productName}\nPN: ${selectedProduct.pn || ''}\n${selectedProduct.descricao || ''}\n\nPreço: ${price}\n\nConsulte condições de pagamento.\n\nAtenciosamente,\n${selectedVendor.nome}\n${selectedVendor.whatsapp}\n${selectedVendor.email}`;
            
            const encodedSubject = encodeURIComponent(subject);
            const encodedBody = encodeURIComponent(body);
            window.location.href = `mailto:?subject=${encodedSubject}&body=${encodedBody}`;
        }
        
        // Inicializar a interface
        showVendorSelector();
        switchView('gallery'); // Iniciar com visualização em galeria
    </script>
<script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML="window.__CF$cv$params={r:'94b9e17c463ead30',t:'MTc0OTIzMzU3Ni4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>
</html>
